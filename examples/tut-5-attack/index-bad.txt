Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  // Violation Witness

  const wager/15 = "Alice".interact.wager;
  //    ^ could = 1
  //      from: ./index-bad.rsh:9:28:application
  const handAlice/21 = "Alice".interact.getHand();
  //    ^ could = 0
  //      from: ./index-bad.rsh:21:50:application
  const handBob/32 = "Bob".interact.getHand();
  //    ^ could = 2
  //      from: ./index-bad.rsh:29:48:application


  // Theorem Formalization

  const outcome/41 = (handAlice/21 + (4 - handBob/32)) % 3;
  //    ^ would be 2
  const v48 = (outcome/41 == 2) ? [1, 0 ] : (outcome/41 == 0) ? [0, 2 ] : [1, 1 ];
  //    ^ would be [1, 0 ]
  const v68 = 0 == (((wager/15 + wager/15) - (v48[0] * wager/15)) - (v48[1] * wager/15));
  //    ^ would be false
  assert(v68);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  (details omitted on repeat)
  Verifying when ONLY "Alice" is honest
Verification failed:
  when ONLY "Alice" is honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  (details omitted on repeat)
  Verifying when ONLY "Bob" is honest
Verification failed:
  when ONLY "Bob" is honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  (details omitted on repeat)
Checked 18 theorems; 4 failures. :'(
