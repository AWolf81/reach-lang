Verifying knowledge assertions
Verifying for generic connector
  Verifying when ALL participants are honest
Verification failed:
  when ALL participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  // Violation Witness

  const wager/26 = "Alice".interact.wager;
  //    ^ could = 2
  //      from: ./index-bad.rsh:9:28:application
  const handAlice/32 = "Alice".interact.getHand();
  //    ^ could = 0
  //      from: ./index-bad.rsh:21:50:application
  const handBob/43 = "Bob".interact.getHand();
  //    ^ could = 2
  //      from: ./index-bad.rsh:29:48:application


  // Theorem Formalization

  const outcome/52 = (handAlice/32 + (4 - handBob/43)) % 3;
  //    ^ would be 2
  const v59 = (outcome/52 == 2) ? [1, 0 ] : (outcome/52 == 0) ? [0, 2 ] : [1, 1 ];
  //    ^ would be [1, 0 ]
  const v79 = 0 == (((wager/26 + wager/26) - (v59[0] * wager/26)) - (v59[1] * wager/26));
  //    ^ would be false
  assert(v79);

  Verifying when NO participants are honest
Verification failed:
  when NO participants are honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  (details omitted on repeat)
  Verifying when ONLY "Alice" is honest
Verification failed:
  when ONLY "Alice" is honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  (details omitted on repeat)
  Verifying when ONLY "Bob" is honest
Verification failed:
  when ONLY "Bob" is honest
  of theorem: assert
  msg: "balance zero at application exit"
  at ./index-bad.rsh:compileDApp

  (details omitted on repeat)
Checked 18 theorems; 4 failures. :'(
