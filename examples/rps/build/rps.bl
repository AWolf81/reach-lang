#lang reach/bl

(define-contract 
  [1 (#:join 0/A:address) False 10 0 () (5/Declassify:uint256 6/Declassify:uint256) 
    (define 9/PrimApp:uint256 (TXN_VALUE))
    (define 10/PrimApp:uint256 (ADD 5/Declassify:uint256 6/Declassify:uint256))
    (define 11/PrimApp:bool (PEQ 9/PrimApp:uint256 10/PrimApp:uint256))
    (require! 11/PrimApp:bool)
    (wait! 1 (0/A:address 5/Declassify:uint256 6/Declassify:uint256))]
  [2 (#:any) True 10 0 () () 
    (halt!)]
  [3 (#:join 3/B:address) False 10 1 (0/A:address 5/Declassify:uint256 6/Declassify:uint256) () 
    (define 13/PrimApp:uint256 (TXN_VALUE))
    (define 14/PrimApp:bool (PEQ 13/PrimApp:uint256 5/Declassify:uint256))
    (require! 14/PrimApp:bool)
    (wait! 3 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256))]
  [4 (#:from 0/A:address) True 10 1 (0/A:address 5/Declassify:uint256 6/Declassify:uint256) () 
    (define 139/PrimApp:uint256 (BALANCE))
    (transfer! 0/A:address 139/PrimApp:uint256)
    (halt!)]
  [5 (#:from 0/A:address) False 10 3 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256) (31/Declassify:uint256) 
    (define 33/PrimApp:uint256 (TXN_VALUE))
    (define 34/PrimApp:bool (PEQ 33/PrimApp:uint256 0))
    (require! 34/PrimApp:bool)
    (wait! 5 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256))]
  [6 (#:from 3/B:address) True 10 3 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256) () 
    (define 138/PrimApp:uint256 (BALANCE))
    (transfer! 3/B:address 138/PrimApp:uint256)
    (halt!)]
  [7 (#:from 3/B:address) False 10 5 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256) (46/Declassify:uint256) 
    (define 48/PrimApp:uint256 (TXN_VALUE))
    (define 49/PrimApp:bool (PEQ 48/PrimApp:uint256 0))
    (require! 49/PrimApp:bool)
    (define 50/PrimApp:bool (PLE 0 46/Declassify:uint256))
    (define 51/PrimApp:bool (PLT 46/Declassify:uint256 3))
    (define 52/PureIf:bool (IF_THEN_ELSE 50/PrimApp:bool 51/PrimApp:bool False))
    (require! 52/PureIf:bool)
    (wait! 7 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256 46/Declassify:uint256))]
  [8 (#:from 0/A:address) True 10 5 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256) () 
    (define 137/PrimApp:uint256 (BALANCE))
    (transfer! 0/A:address 137/PrimApp:uint256)
    (halt!)]
  [9 (#:from 0/A:address) False 10 7 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256 46/Declassify:uint256) (53/Declassify:uint256 54/Declassify:uint256) 
    (define 63/PrimApp:uint256 (TXN_VALUE))
    (define 64/PrimApp:bool (PEQ 63/PrimApp:uint256 0))
    (require! 64/PrimApp:bool)
    (define 65/PrimApp:bytes (UINT256_TO_BYTES 53/Declassify:uint256))
    (define 66/PrimApp:bytes (UINT256_TO_BYTES 54/Declassify:uint256))
    (define 67/PrimApp:bytes (BCAT 65/PrimApp:bytes 66/PrimApp:bytes))
    (define 68/PrimApp:uint256 (DIGEST 67/PrimApp:bytes))
    (define 69/PrimApp:bool (PEQ 31/Declassify:uint256 68/PrimApp:uint256))
    (require! 69/PrimApp:bool)
    (define 70/PrimApp:bool (PLE 0 54/Declassify:uint256))
    (define 71/PrimApp:bool (PLT 54/Declassify:uint256 3))
    (define 72/PureIf:bool (IF_THEN_ELSE 70/PrimApp:bool 71/PrimApp:bool False))
    (require! 72/PureIf:bool)
    (define 73/PrimApp:bool (PLE 0 54/Declassify:uint256))
    (define 74/PrimApp:bool (PLT 54/Declassify:uint256 3))
    (define 75/PureIf:bool (IF_THEN_ELSE 73/PrimApp:bool 74/PrimApp:bool False))
    (define 76/PrimApp:bool (PLE 0 46/Declassify:uint256))
    (define 77/PrimApp:bool (PLT 46/Declassify:uint256 3))
    (define 78/PureIf:bool (IF_THEN_ELSE 76/PrimApp:bool 77/PrimApp:bool False))
    (define 79/PureIf:bool (IF_THEN_ELSE 75/PureIf:bool 78/PureIf:bool False))
    (define 80/PrimApp:uint256 (SUB 4 46/Declassify:uint256))
    (define 81/PrimApp:uint256 (ADD 54/Declassify:uint256 80/PrimApp:uint256))
    (define 82/PrimApp:uint256 (MOD 81/PrimApp:uint256 3))
    (define 83/PureIf:uint256 (IF_THEN_ELSE 78/PureIf:bool 0 1))
    (define 84/PureIf:uint256 (IF_THEN_ELSE 75/PureIf:bool 2 83/PureIf:uint256))
    (define 85/PureIf:uint256 (IF_THEN_ELSE 79/PureIf:bool 82/PrimApp:uint256 84/PureIf:uint256))
    (define 86/PrimApp:bool (PLE 0 85/PureIf:uint256))
    (define 87/PrimApp:bool (PLT 85/PureIf:uint256 5))
    (define 88/PureIf:bool (IF_THEN_ELSE 86/PrimApp:bool 87/PrimApp:bool False))
    (assert! 88/PureIf:bool)
    (define 89/PrimApp:bool (PEQ 85/PureIf:uint256 2))
    (define 90/PrimApp:bool (PLE 0 54/Declassify:uint256))
    (define 91/PrimApp:bool (PLT 54/Declassify:uint256 3))
    (define 92/PureIf:bool (IF_THEN_ELSE 90/PrimApp:bool 91/PrimApp:bool False))
    (define 93/PureIf:bool (IF_THEN_ELSE 89/PrimApp:bool False True))
    (define 94/PureIf:bool (IF_THEN_ELSE 93/PureIf:bool True 92/PureIf:bool))
    (assert! 94/PureIf:bool)
    (define 95/PrimApp:bool (PEQ 85/PureIf:uint256 0))
    (define 96/PrimApp:bool (PLE 0 46/Declassify:uint256))
    (define 97/PrimApp:bool (PLT 46/Declassify:uint256 3))
    (define 98/PureIf:bool (IF_THEN_ELSE 96/PrimApp:bool 97/PrimApp:bool False))
    (define 99/PureIf:bool (IF_THEN_ELSE 95/PrimApp:bool False True))
    (define 100/PureIf:bool (IF_THEN_ELSE 99/PureIf:bool True 98/PureIf:bool))
    (assert! 100/PureIf:bool)
    (define 101/PrimApp:bool (PEQ 85/PureIf:uint256 2))
    (define 102/PrimApp:bool (PEQ 54/Declassify:uint256 0))
    (define 103/PureIf:bool (IF_THEN_ELSE 102/PrimApp:bool 101/PrimApp:bool False))
    (possible? 103/PureIf:bool)
    (define 104/PrimApp:bool (PEQ 54/Declassify:uint256 1))
    (define 105/PureIf:bool (IF_THEN_ELSE 104/PrimApp:bool 101/PrimApp:bool False))
    (possible? 105/PureIf:bool)
    (define 106/PrimApp:bool (PEQ 54/Declassify:uint256 2))
    (define 107/PureIf:bool (IF_THEN_ELSE 106/PrimApp:bool 101/PrimApp:bool False))
    (possible? 107/PureIf:bool)
    (define 108/PrimApp:bool (PEQ 85/PureIf:uint256 0))
    (define 109/PrimApp:bool (PEQ 46/Declassify:uint256 0))
    (define 110/PureIf:bool (IF_THEN_ELSE 109/PrimApp:bool 108/PrimApp:bool False))
    (possible? 110/PureIf:bool)
    (define 111/PrimApp:bool (PEQ 46/Declassify:uint256 1))
    (define 112/PureIf:bool (IF_THEN_ELSE 111/PrimApp:bool 108/PrimApp:bool False))
    (possible? 112/PureIf:bool)
    (define 113/PrimApp:bool (PEQ 46/Declassify:uint256 2))
    (define 114/PureIf:bool (IF_THEN_ELSE 113/PrimApp:bool 108/PrimApp:bool False))
    (possible? 114/PureIf:bool)
    (define 115/PrimApp:bool (PEQ 85/PureIf:uint256 2))
    (define 116/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
    (define 117/PrimApp:bool (PEQ 85/PureIf:uint256 0))
    (define 118/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
    (define 119/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 0 5/Declassify:uint256))
    (define 120/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 118/PrimApp:uint256 5/Declassify:uint256))
    (define 121/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 116/PrimApp:uint256 119/PureIf:uint256))
    (define 122/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 0 120/PureIf:uint256))
    (define 123/PrimApp:uint256 (ADD 6/Declassify:uint256 121/PureIf:uint256))
    (transfer! 0/A:address 123/PrimApp:uint256)
    (transfer! 3/B:address 122/PureIf:uint256)
    (halt!)]
  [10 (#:from 3/B:address) True 10 7 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256 46/Declassify:uint256) () 
    (define 136/PrimApp:uint256 (BALANCE))
    (transfer! 3/B:address 136/PrimApp:uint256)
    (halt!)])

(define-participant (0, (A, address)) 
  (1/_wagerAmount:uint256 2/_escrowAmount:uint256)
  
  (define 5/Declassify:uint256 1/_wagerAmount:uint256)
  (define 6/Declassify:uint256 2/_escrowAmount:uint256)
  (define 7/Interact:bool (interact.params bool ))
  (define 8/PrimApp:uint256 (ADD 5/Declassify:uint256 6/Declassify:uint256))
  (send! (#:join 0/A:address) 1 () (5/Declassify:uint256 6/Declassify:uint256) 8/PrimApp:uint256 
    #:timeout (#:any) 2 10 
      (begin 
        (require! True)
        "Alice quits"))
  (define 9/PrimApp:uint256 (TXN_VALUE))
  (define 10/PrimApp:uint256 (ADD 5/Declassify:uint256 6/Declassify:uint256))
  (define 11/PrimApp:bool (PEQ 9/PrimApp:uint256 10/PrimApp:uint256))
  (require! 11/PrimApp:bool)
  (define-values (0/A:address 5/Declassify:uint256 6/Declassify:uint256) () (recv! (#:join 3/B:address) 3 
    #:timeout (#:from 0/A:address) 4 10 
      (begin 
        (define 139/PrimApp:uint256 (BALANCE))
        (require! True)
        "Bob quits")))
  (define 13/PrimApp:uint256 (TXN_VALUE))
  (define 14/PrimApp:bool (PEQ 13/PrimApp:uint256 5/Declassify:uint256))
  (require! 14/PrimApp:bool)
  (define 15/Interact:bytes (interact.getHand bytes ))
  (define 16/PrimApp:bool (BYTES_EQ 15/Interact:bytes "ROCK"))
  (define 17/PrimApp:bool (BYTES_EQ 15/Interact:bytes "PAPER"))
  (define 18/PrimApp:bool (BYTES_EQ 15/Interact:bytes "SCISSORS"))
  (define 19/PureIf:bool (IF_THEN_ELSE 16/PrimApp:bool True 17/PrimApp:bool))
  (define 20/PureIf:bool (IF_THEN_ELSE 19/PureIf:bool True 18/PrimApp:bool))
  (assume! 20/PureIf:bool)
  (define 21/PureIf:uint256 (IF_THEN_ELSE 17/PrimApp:bool 1 2))
  (define 22/PureIf:uint256 (IF_THEN_ELSE 16/PrimApp:bool 0 21/PureIf:uint256))
  (define 23/PrimApp:bool (PLE 0 22/PureIf:uint256))
  (define 24/PrimApp:bool (PLT 22/PureIf:uint256 3))
  (define 25/PureIf:bool (IF_THEN_ELSE 23/PrimApp:bool 24/PrimApp:bool False))
  (assert! 25/PureIf:bool)
  (define 26/PrimApp:uint256 (RANDOM))
  (define 27/PrimApp:bytes (UINT256_TO_BYTES 26/PrimApp:uint256))
  (define 28/PrimApp:bytes (UINT256_TO_BYTES 22/PureIf:uint256))
  (define 29/PrimApp:bytes (BCAT 27/PrimApp:bytes 28/PrimApp:bytes))
  (define 30/PrimApp:uint256 (DIGEST 29/PrimApp:bytes))
  (define 31/Declassify:uint256 30/PrimApp:uint256)
  (define 32/Interact:bool (interact.commits bool ))
  (send! (#:from 0/A:address) 5 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256) (31/Declassify:uint256) 0 
    #:timeout (#:from 3/B:address) 6 10 
      (begin 
        (define 138/PrimApp:uint256 (BALANCE))
        (require! True)
        "Alice quits"))
  (define 33/PrimApp:uint256 (TXN_VALUE))
  (define 34/PrimApp:bool (PEQ 33/PrimApp:uint256 0))
  (require! 34/PrimApp:bool)
  (define-values (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256) (46/Declassify:uint256) (recv! (#:from 3/B:address) 7 
    #:timeout (#:from 0/A:address) 8 10 
      (begin 
        (define 137/PrimApp:uint256 (BALANCE))
        (require! True)
        "Bob quits")))
  (define 48/PrimApp:uint256 (TXN_VALUE))
  (define 49/PrimApp:bool (PEQ 48/PrimApp:uint256 0))
  (require! 49/PrimApp:bool)
  (define 50/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 51/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 52/PureIf:bool (IF_THEN_ELSE 50/PrimApp:bool 51/PrimApp:bool False))
  (require! 52/PureIf:bool)
  (define 53/Declassify:uint256 26/PrimApp:uint256)
  (define 54/Declassify:uint256 22/PureIf:uint256)
  (define 55/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 56/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 57/PureIf:bool (IF_THEN_ELSE 55/PrimApp:bool 56/PrimApp:bool False))
  (require! 57/PureIf:bool)
  (define 58/PrimApp:bool (PEQ 46/Declassify:uint256 0))
  (define 59/PrimApp:bool (PEQ 46/Declassify:uint256 1))
  (define 60/PureIf:bytes (IF_THEN_ELSE 59/PrimApp:bool "PAPER" "SCISSORS"))
  (define 61/PureIf:bytes (IF_THEN_ELSE 58/PrimApp:bool "ROCK" 60/PureIf:bytes))
  (define 62/Interact:bool (interact.reveals bool 61/PureIf:bytes))
  (send! (#:from 0/A:address) 9 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256 46/Declassify:uint256) (53/Declassify:uint256 54/Declassify:uint256) 0 
    #:timeout (#:from 3/B:address) 10 10 
      (begin 
        (define 136/PrimApp:uint256 (BALANCE))
        (require! True)
        "Alice quits"))
  (define 63/PrimApp:uint256 (TXN_VALUE))
  (define 64/PrimApp:bool (PEQ 63/PrimApp:uint256 0))
  (require! 64/PrimApp:bool)
  (define 65/PrimApp:bytes (UINT256_TO_BYTES 53/Declassify:uint256))
  (define 66/PrimApp:bytes (UINT256_TO_BYTES 54/Declassify:uint256))
  (define 67/PrimApp:bytes (BCAT 65/PrimApp:bytes 66/PrimApp:bytes))
  (define 68/PrimApp:uint256 (DIGEST 67/PrimApp:bytes))
  (define 69/PrimApp:bool (PEQ 31/Declassify:uint256 68/PrimApp:uint256))
  (require! 69/PrimApp:bool)
  (define 70/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 71/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 72/PureIf:bool (IF_THEN_ELSE 70/PrimApp:bool 71/PrimApp:bool False))
  (require! 72/PureIf:bool)
  (define 73/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 74/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 75/PureIf:bool (IF_THEN_ELSE 73/PrimApp:bool 74/PrimApp:bool False))
  (define 76/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 77/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 78/PureIf:bool (IF_THEN_ELSE 76/PrimApp:bool 77/PrimApp:bool False))
  (define 79/PureIf:bool (IF_THEN_ELSE 75/PureIf:bool 78/PureIf:bool False))
  (define 80/PrimApp:uint256 (SUB 4 46/Declassify:uint256))
  (define 81/PrimApp:uint256 (ADD 54/Declassify:uint256 80/PrimApp:uint256))
  (define 82/PrimApp:uint256 (MOD 81/PrimApp:uint256 3))
  (define 83/PureIf:uint256 (IF_THEN_ELSE 78/PureIf:bool 0 1))
  (define 84/PureIf:uint256 (IF_THEN_ELSE 75/PureIf:bool 2 83/PureIf:uint256))
  (define 85/PureIf:uint256 (IF_THEN_ELSE 79/PureIf:bool 82/PrimApp:uint256 84/PureIf:uint256))
  (define 86/PrimApp:bool (PLE 0 85/PureIf:uint256))
  (define 87/PrimApp:bool (PLT 85/PureIf:uint256 5))
  (define 88/PureIf:bool (IF_THEN_ELSE 86/PrimApp:bool 87/PrimApp:bool False))
  (assert! 88/PureIf:bool)
  (define 89/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 90/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 91/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 92/PureIf:bool (IF_THEN_ELSE 90/PrimApp:bool 91/PrimApp:bool False))
  (define 93/PureIf:bool (IF_THEN_ELSE 89/PrimApp:bool False True))
  (define 94/PureIf:bool (IF_THEN_ELSE 93/PureIf:bool True 92/PureIf:bool))
  (assert! 94/PureIf:bool)
  (define 95/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 96/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 97/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 98/PureIf:bool (IF_THEN_ELSE 96/PrimApp:bool 97/PrimApp:bool False))
  (define 99/PureIf:bool (IF_THEN_ELSE 95/PrimApp:bool False True))
  (define 100/PureIf:bool (IF_THEN_ELSE 99/PureIf:bool True 98/PureIf:bool))
  (assert! 100/PureIf:bool)
  (define 101/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 102/PrimApp:bool (PEQ 54/Declassify:uint256 0))
  (define 103/PureIf:bool (IF_THEN_ELSE 102/PrimApp:bool 101/PrimApp:bool False))
  (possible? 103/PureIf:bool)
  (define 104/PrimApp:bool (PEQ 54/Declassify:uint256 1))
  (define 105/PureIf:bool (IF_THEN_ELSE 104/PrimApp:bool 101/PrimApp:bool False))
  (possible? 105/PureIf:bool)
  (define 106/PrimApp:bool (PEQ 54/Declassify:uint256 2))
  (define 107/PureIf:bool (IF_THEN_ELSE 106/PrimApp:bool 101/PrimApp:bool False))
  (possible? 107/PureIf:bool)
  (define 108/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 109/PrimApp:bool (PEQ 46/Declassify:uint256 0))
  (define 110/PureIf:bool (IF_THEN_ELSE 109/PrimApp:bool 108/PrimApp:bool False))
  (possible? 110/PureIf:bool)
  (define 111/PrimApp:bool (PEQ 46/Declassify:uint256 1))
  (define 112/PureIf:bool (IF_THEN_ELSE 111/PrimApp:bool 108/PrimApp:bool False))
  (possible? 112/PureIf:bool)
  (define 113/PrimApp:bool (PEQ 46/Declassify:uint256 2))
  (define 114/PureIf:bool (IF_THEN_ELSE 113/PrimApp:bool 108/PrimApp:bool False))
  (possible? 114/PureIf:bool)
  (define 115/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 116/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
  (define 117/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 118/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
  (define 119/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 0 5/Declassify:uint256))
  (define 120/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 118/PrimApp:uint256 5/Declassify:uint256))
  (define 121/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 116/PrimApp:uint256 119/PureIf:uint256))
  (define 122/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 0 120/PureIf:uint256))
  (define 123/PrimApp:uint256 (ADD 6/Declassify:uint256 121/PureIf:uint256))
  (define 124/Interact:bool (interact.outcome bool ))
  (define 125/PrimApp:bool (PLE 0 85/PureIf:uint256))
  (define 126/PrimApp:bool (PLT 85/PureIf:uint256 5))
  (define 127/PureIf:bool (IF_THEN_ELSE 125/PrimApp:bool 126/PrimApp:bool False))
  (require! 127/PureIf:bool)
  (define 128/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 129/PrimApp:bool (PEQ 85/PureIf:uint256 1))
  (define 130/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 131/PrimApp:bool (PEQ 85/PureIf:uint256 3))
  (define 132/PureIf:bytes (IF_THEN_ELSE 131/PrimApp:bool "Alice quits" "Bob quits"))
  (define 133/PureIf:bytes (IF_THEN_ELSE 130/PrimApp:bool "Alice wins" 132/PureIf:bytes))
  (define 134/PureIf:bytes (IF_THEN_ELSE 129/PrimApp:bool "Draw" 133/PureIf:bytes))
  (define 135/PureIf:bytes (IF_THEN_ELSE 128/PrimApp:bool "Bob wins" 134/PureIf:bytes))
  135/PureIf:bytes)

(define-participant (3, (B, address)) 
  ()
  
  (define-values () (5/Declassify:uint256 6/Declassify:uint256) (recv! (#:join 0/A:address) 1 
    #:timeout (#:any) 2 10 
      (begin 
        (require! True)
        "Alice quits")))
  (define 9/PrimApp:uint256 (TXN_VALUE))
  (define 10/PrimApp:uint256 (ADD 5/Declassify:uint256 6/Declassify:uint256))
  (define 11/PrimApp:bool (PEQ 9/PrimApp:uint256 10/PrimApp:uint256))
  (require! 11/PrimApp:bool)
  (define 12/Interact:bool (interact.accepts bool 5/Declassify:uint256 6/Declassify:uint256))
  (send! (#:join 3/B:address) 3 (0/A:address 5/Declassify:uint256 6/Declassify:uint256) () 5/Declassify:uint256 
    #:timeout (#:from 0/A:address) 4 10 
      (begin 
        (define 139/PrimApp:uint256 (BALANCE))
        (require! True)
        "Bob quits"))
  (define 13/PrimApp:uint256 (TXN_VALUE))
  (define 14/PrimApp:bool (PEQ 13/PrimApp:uint256 5/Declassify:uint256))
  (require! 14/PrimApp:bool)
  (define-values (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256) (31/Declassify:uint256) (recv! (#:from 0/A:address) 5 
    #:timeout (#:from 3/B:address) 6 10 
      (begin 
        (define 138/PrimApp:uint256 (BALANCE))
        (require! True)
        "Alice quits")))
  (define 33/PrimApp:uint256 (TXN_VALUE))
  (define 34/PrimApp:bool (PEQ 33/PrimApp:uint256 0))
  (require! 34/PrimApp:bool)
  (define 35/Interact:bytes (interact.getHand bytes ))
  (define 36/PrimApp:bool (BYTES_EQ 35/Interact:bytes "ROCK"))
  (define 37/PrimApp:bool (BYTES_EQ 35/Interact:bytes "PAPER"))
  (define 38/PrimApp:bool (BYTES_EQ 35/Interact:bytes "SCISSORS"))
  (define 39/PureIf:bool (IF_THEN_ELSE 36/PrimApp:bool True 37/PrimApp:bool))
  (define 40/PureIf:bool (IF_THEN_ELSE 39/PureIf:bool True 38/PrimApp:bool))
  (assume! 40/PureIf:bool)
  (define 41/PureIf:uint256 (IF_THEN_ELSE 37/PrimApp:bool 1 2))
  (define 42/PureIf:uint256 (IF_THEN_ELSE 36/PrimApp:bool 0 41/PureIf:uint256))
  (define 43/PrimApp:bool (PLE 0 42/PureIf:uint256))
  (define 44/PrimApp:bool (PLT 42/PureIf:uint256 3))
  (define 45/PureIf:bool (IF_THEN_ELSE 43/PrimApp:bool 44/PrimApp:bool False))
  (assert! 45/PureIf:bool)
  (define 46/Declassify:uint256 42/PureIf:uint256)
  (define 47/Interact:bool (interact.shows bool ))
  (send! (#:from 3/B:address) 7 (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256) (46/Declassify:uint256) 0 
    #:timeout (#:from 0/A:address) 8 10 
      (begin 
        (define 137/PrimApp:uint256 (BALANCE))
        (require! True)
        "Bob quits"))
  (define 48/PrimApp:uint256 (TXN_VALUE))
  (define 49/PrimApp:bool (PEQ 48/PrimApp:uint256 0))
  (require! 49/PrimApp:bool)
  (define 50/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 51/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 52/PureIf:bool (IF_THEN_ELSE 50/PrimApp:bool 51/PrimApp:bool False))
  (require! 52/PureIf:bool)
  (define-values (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256 46/Declassify:uint256) (53/Declassify:uint256 54/Declassify:uint256) (recv! (#:from 0/A:address) 9 
    #:timeout (#:from 3/B:address) 10 10 
      (begin 
        (define 136/PrimApp:uint256 (BALANCE))
        (require! True)
        "Alice quits")))
  (define 63/PrimApp:uint256 (TXN_VALUE))
  (define 64/PrimApp:bool (PEQ 63/PrimApp:uint256 0))
  (require! 64/PrimApp:bool)
  (define 65/PrimApp:bytes (UINT256_TO_BYTES 53/Declassify:uint256))
  (define 66/PrimApp:bytes (UINT256_TO_BYTES 54/Declassify:uint256))
  (define 67/PrimApp:bytes (BCAT 65/PrimApp:bytes 66/PrimApp:bytes))
  (define 68/PrimApp:uint256 (DIGEST 67/PrimApp:bytes))
  (define 69/PrimApp:bool (PEQ 31/Declassify:uint256 68/PrimApp:uint256))
  (require! 69/PrimApp:bool)
  (define 70/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 71/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 72/PureIf:bool (IF_THEN_ELSE 70/PrimApp:bool 71/PrimApp:bool False))
  (require! 72/PureIf:bool)
  (define 73/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 74/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 75/PureIf:bool (IF_THEN_ELSE 73/PrimApp:bool 74/PrimApp:bool False))
  (define 76/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 77/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 78/PureIf:bool (IF_THEN_ELSE 76/PrimApp:bool 77/PrimApp:bool False))
  (define 79/PureIf:bool (IF_THEN_ELSE 75/PureIf:bool 78/PureIf:bool False))
  (define 80/PrimApp:uint256 (SUB 4 46/Declassify:uint256))
  (define 81/PrimApp:uint256 (ADD 54/Declassify:uint256 80/PrimApp:uint256))
  (define 82/PrimApp:uint256 (MOD 81/PrimApp:uint256 3))
  (define 83/PureIf:uint256 (IF_THEN_ELSE 78/PureIf:bool 0 1))
  (define 84/PureIf:uint256 (IF_THEN_ELSE 75/PureIf:bool 2 83/PureIf:uint256))
  (define 85/PureIf:uint256 (IF_THEN_ELSE 79/PureIf:bool 82/PrimApp:uint256 84/PureIf:uint256))
  (define 86/PrimApp:bool (PLE 0 85/PureIf:uint256))
  (define 87/PrimApp:bool (PLT 85/PureIf:uint256 5))
  (define 88/PureIf:bool (IF_THEN_ELSE 86/PrimApp:bool 87/PrimApp:bool False))
  (assert! 88/PureIf:bool)
  (define 89/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 90/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 91/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 92/PureIf:bool (IF_THEN_ELSE 90/PrimApp:bool 91/PrimApp:bool False))
  (define 93/PureIf:bool (IF_THEN_ELSE 89/PrimApp:bool False True))
  (define 94/PureIf:bool (IF_THEN_ELSE 93/PureIf:bool True 92/PureIf:bool))
  (assert! 94/PureIf:bool)
  (define 95/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 96/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 97/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 98/PureIf:bool (IF_THEN_ELSE 96/PrimApp:bool 97/PrimApp:bool False))
  (define 99/PureIf:bool (IF_THEN_ELSE 95/PrimApp:bool False True))
  (define 100/PureIf:bool (IF_THEN_ELSE 99/PureIf:bool True 98/PureIf:bool))
  (assert! 100/PureIf:bool)
  (define 101/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 102/PrimApp:bool (PEQ 54/Declassify:uint256 0))
  (define 103/PureIf:bool (IF_THEN_ELSE 102/PrimApp:bool 101/PrimApp:bool False))
  (possible? 103/PureIf:bool)
  (define 104/PrimApp:bool (PEQ 54/Declassify:uint256 1))
  (define 105/PureIf:bool (IF_THEN_ELSE 104/PrimApp:bool 101/PrimApp:bool False))
  (possible? 105/PureIf:bool)
  (define 106/PrimApp:bool (PEQ 54/Declassify:uint256 2))
  (define 107/PureIf:bool (IF_THEN_ELSE 106/PrimApp:bool 101/PrimApp:bool False))
  (possible? 107/PureIf:bool)
  (define 108/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 109/PrimApp:bool (PEQ 46/Declassify:uint256 0))
  (define 110/PureIf:bool (IF_THEN_ELSE 109/PrimApp:bool 108/PrimApp:bool False))
  (possible? 110/PureIf:bool)
  (define 111/PrimApp:bool (PEQ 46/Declassify:uint256 1))
  (define 112/PureIf:bool (IF_THEN_ELSE 111/PrimApp:bool 108/PrimApp:bool False))
  (possible? 112/PureIf:bool)
  (define 113/PrimApp:bool (PEQ 46/Declassify:uint256 2))
  (define 114/PureIf:bool (IF_THEN_ELSE 113/PrimApp:bool 108/PrimApp:bool False))
  (possible? 114/PureIf:bool)
  (define 115/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 116/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
  (define 117/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 118/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
  (define 119/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 0 5/Declassify:uint256))
  (define 120/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 118/PrimApp:uint256 5/Declassify:uint256))
  (define 121/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 116/PrimApp:uint256 119/PureIf:uint256))
  (define 122/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 0 120/PureIf:uint256))
  (define 123/PrimApp:uint256 (ADD 6/Declassify:uint256 121/PureIf:uint256))
  (define 124/Interact:bool (interact.outcome bool ))
  (define 125/PrimApp:bool (PLE 0 85/PureIf:uint256))
  (define 126/PrimApp:bool (PLT 85/PureIf:uint256 5))
  (define 127/PureIf:bool (IF_THEN_ELSE 125/PrimApp:bool 126/PrimApp:bool False))
  (require! 127/PureIf:bool)
  (define 128/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 129/PrimApp:bool (PEQ 85/PureIf:uint256 1))
  (define 130/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 131/PrimApp:bool (PEQ 85/PureIf:uint256 3))
  (define 132/PureIf:bytes (IF_THEN_ELSE 131/PrimApp:bool "Alice quits" "Bob quits"))
  (define 133/PureIf:bytes (IF_THEN_ELSE 130/PrimApp:bool "Alice wins" 132/PureIf:bytes))
  (define 134/PureIf:bytes (IF_THEN_ELSE 129/PrimApp:bool "Draw" 133/PureIf:bytes))
  (define 135/PureIf:bytes (IF_THEN_ELSE 128/PrimApp:bool "Bob wins" 134/PureIf:bytes))
  135/PureIf:bytes)

(define-participant (4, (O, address)) 
  ()
  
  (define-values () (5/Declassify:uint256 6/Declassify:uint256) (recv! (#:join 0/A:address) 1 
    #:timeout (#:any) 2 10 
      (begin 
        (require! True)
        "Alice quits")))
  (define 9/PrimApp:uint256 (TXN_VALUE))
  (define 10/PrimApp:uint256 (ADD 5/Declassify:uint256 6/Declassify:uint256))
  (define 11/PrimApp:bool (PEQ 9/PrimApp:uint256 10/PrimApp:uint256))
  (require! 11/PrimApp:bool)
  (define-values (0/A:address 5/Declassify:uint256 6/Declassify:uint256) () (recv! (#:join 3/B:address) 3 
    #:timeout (#:from 0/A:address) 4 10 
      (begin 
        (define 139/PrimApp:uint256 (BALANCE))
        (require! True)
        "Bob quits")))
  (define 13/PrimApp:uint256 (TXN_VALUE))
  (define 14/PrimApp:bool (PEQ 13/PrimApp:uint256 5/Declassify:uint256))
  (require! 14/PrimApp:bool)
  (define-values (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256) (31/Declassify:uint256) (recv! (#:from 0/A:address) 5 
    #:timeout (#:from 3/B:address) 6 10 
      (begin 
        (define 138/PrimApp:uint256 (BALANCE))
        (require! True)
        "Alice quits")))
  (define 33/PrimApp:uint256 (TXN_VALUE))
  (define 34/PrimApp:bool (PEQ 33/PrimApp:uint256 0))
  (require! 34/PrimApp:bool)
  (define-values (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256) (46/Declassify:uint256) (recv! (#:from 3/B:address) 7 
    #:timeout (#:from 0/A:address) 8 10 
      (begin 
        (define 137/PrimApp:uint256 (BALANCE))
        (require! True)
        "Bob quits")))
  (define 48/PrimApp:uint256 (TXN_VALUE))
  (define 49/PrimApp:bool (PEQ 48/PrimApp:uint256 0))
  (require! 49/PrimApp:bool)
  (define 50/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 51/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 52/PureIf:bool (IF_THEN_ELSE 50/PrimApp:bool 51/PrimApp:bool False))
  (require! 52/PureIf:bool)
  (define-values (0/A:address 3/B:address 5/Declassify:uint256 6/Declassify:uint256 31/Declassify:uint256 46/Declassify:uint256) (53/Declassify:uint256 54/Declassify:uint256) (recv! (#:from 0/A:address) 9 
    #:timeout (#:from 3/B:address) 10 10 
      (begin 
        (define 136/PrimApp:uint256 (BALANCE))
        (require! True)
        "Alice quits")))
  (define 63/PrimApp:uint256 (TXN_VALUE))
  (define 64/PrimApp:bool (PEQ 63/PrimApp:uint256 0))
  (require! 64/PrimApp:bool)
  (define 65/PrimApp:bytes (UINT256_TO_BYTES 53/Declassify:uint256))
  (define 66/PrimApp:bytes (UINT256_TO_BYTES 54/Declassify:uint256))
  (define 67/PrimApp:bytes (BCAT 65/PrimApp:bytes 66/PrimApp:bytes))
  (define 68/PrimApp:uint256 (DIGEST 67/PrimApp:bytes))
  (define 69/PrimApp:bool (PEQ 31/Declassify:uint256 68/PrimApp:uint256))
  (require! 69/PrimApp:bool)
  (define 70/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 71/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 72/PureIf:bool (IF_THEN_ELSE 70/PrimApp:bool 71/PrimApp:bool False))
  (require! 72/PureIf:bool)
  (define 73/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 74/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 75/PureIf:bool (IF_THEN_ELSE 73/PrimApp:bool 74/PrimApp:bool False))
  (define 76/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 77/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 78/PureIf:bool (IF_THEN_ELSE 76/PrimApp:bool 77/PrimApp:bool False))
  (define 79/PureIf:bool (IF_THEN_ELSE 75/PureIf:bool 78/PureIf:bool False))
  (define 80/PrimApp:uint256 (SUB 4 46/Declassify:uint256))
  (define 81/PrimApp:uint256 (ADD 54/Declassify:uint256 80/PrimApp:uint256))
  (define 82/PrimApp:uint256 (MOD 81/PrimApp:uint256 3))
  (define 83/PureIf:uint256 (IF_THEN_ELSE 78/PureIf:bool 0 1))
  (define 84/PureIf:uint256 (IF_THEN_ELSE 75/PureIf:bool 2 83/PureIf:uint256))
  (define 85/PureIf:uint256 (IF_THEN_ELSE 79/PureIf:bool 82/PrimApp:uint256 84/PureIf:uint256))
  (define 86/PrimApp:bool (PLE 0 85/PureIf:uint256))
  (define 87/PrimApp:bool (PLT 85/PureIf:uint256 5))
  (define 88/PureIf:bool (IF_THEN_ELSE 86/PrimApp:bool 87/PrimApp:bool False))
  (assert! 88/PureIf:bool)
  (define 89/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 90/PrimApp:bool (PLE 0 54/Declassify:uint256))
  (define 91/PrimApp:bool (PLT 54/Declassify:uint256 3))
  (define 92/PureIf:bool (IF_THEN_ELSE 90/PrimApp:bool 91/PrimApp:bool False))
  (define 93/PureIf:bool (IF_THEN_ELSE 89/PrimApp:bool False True))
  (define 94/PureIf:bool (IF_THEN_ELSE 93/PureIf:bool True 92/PureIf:bool))
  (assert! 94/PureIf:bool)
  (define 95/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 96/PrimApp:bool (PLE 0 46/Declassify:uint256))
  (define 97/PrimApp:bool (PLT 46/Declassify:uint256 3))
  (define 98/PureIf:bool (IF_THEN_ELSE 96/PrimApp:bool 97/PrimApp:bool False))
  (define 99/PureIf:bool (IF_THEN_ELSE 95/PrimApp:bool False True))
  (define 100/PureIf:bool (IF_THEN_ELSE 99/PureIf:bool True 98/PureIf:bool))
  (assert! 100/PureIf:bool)
  (define 101/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 102/PrimApp:bool (PEQ 54/Declassify:uint256 0))
  (define 103/PureIf:bool (IF_THEN_ELSE 102/PrimApp:bool 101/PrimApp:bool False))
  (possible? 103/PureIf:bool)
  (define 104/PrimApp:bool (PEQ 54/Declassify:uint256 1))
  (define 105/PureIf:bool (IF_THEN_ELSE 104/PrimApp:bool 101/PrimApp:bool False))
  (possible? 105/PureIf:bool)
  (define 106/PrimApp:bool (PEQ 54/Declassify:uint256 2))
  (define 107/PureIf:bool (IF_THEN_ELSE 106/PrimApp:bool 101/PrimApp:bool False))
  (possible? 107/PureIf:bool)
  (define 108/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 109/PrimApp:bool (PEQ 46/Declassify:uint256 0))
  (define 110/PureIf:bool (IF_THEN_ELSE 109/PrimApp:bool 108/PrimApp:bool False))
  (possible? 110/PureIf:bool)
  (define 111/PrimApp:bool (PEQ 46/Declassify:uint256 1))
  (define 112/PureIf:bool (IF_THEN_ELSE 111/PrimApp:bool 108/PrimApp:bool False))
  (possible? 112/PureIf:bool)
  (define 113/PrimApp:bool (PEQ 46/Declassify:uint256 2))
  (define 114/PureIf:bool (IF_THEN_ELSE 113/PrimApp:bool 108/PrimApp:bool False))
  (possible? 114/PureIf:bool)
  (define 115/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 116/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
  (define 117/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 118/PrimApp:uint256 (MUL 2 5/Declassify:uint256))
  (define 119/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 0 5/Declassify:uint256))
  (define 120/PureIf:uint256 (IF_THEN_ELSE 117/PrimApp:bool 118/PrimApp:uint256 5/Declassify:uint256))
  (define 121/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 116/PrimApp:uint256 119/PureIf:uint256))
  (define 122/PureIf:uint256 (IF_THEN_ELSE 115/PrimApp:bool 0 120/PureIf:uint256))
  (define 123/PrimApp:uint256 (ADD 6/Declassify:uint256 121/PureIf:uint256))
  (define 124/Interact:bool (interact.outcome bool ))
  (define 125/PrimApp:bool (PLE 0 85/PureIf:uint256))
  (define 126/PrimApp:bool (PLT 85/PureIf:uint256 5))
  (define 127/PureIf:bool (IF_THEN_ELSE 125/PrimApp:bool 126/PrimApp:bool False))
  (require! 127/PureIf:bool)
  (define 128/PrimApp:bool (PEQ 85/PureIf:uint256 0))
  (define 129/PrimApp:bool (PEQ 85/PureIf:uint256 1))
  (define 130/PrimApp:bool (PEQ 85/PureIf:uint256 2))
  (define 131/PrimApp:bool (PEQ 85/PureIf:uint256 3))
  (define 132/PureIf:bytes (IF_THEN_ELSE 131/PrimApp:bool "Alice quits" "Bob quits"))
  (define 133/PureIf:bytes (IF_THEN_ELSE 130/PrimApp:bool "Alice wins" 132/PureIf:bytes))
  (define 134/PureIf:bytes (IF_THEN_ELSE 129/PrimApp:bool "Draw" 133/PureIf:bytes))
  (define 135/PureIf:bytes (IF_THEN_ELSE 128/PrimApp:bool "Bob wins" 134/PureIf:bytes))
  135/PureIf:bytes)