export async function A(stdlib, ctc, interact, v0, v1) {
  const txn0 = { balance: 0, value: 0 };
  const v2 = v0;
  const v3 = v1;
  const v4 = stdlib.isType("bool", await interact.params());
  const v5 = stdlib.add(v2, v3);
  const [txn1] = await ctc.sendrecv("A", "m1", [v2, v3], v5, "e1");
  const v6 = txn1.value;
  const v7 = stdlib.add(v2, v3);
  const v8 = stdlib.eq(v6, v7);
  stdlib.assert(v8);
  const [txn2] = await ctc.recv("A", "e3");
  const v10 = txn2.value;
  const v11 = stdlib.eq(v10, v2);
  stdlib.assert(v11);
  const v12 = stdlib.isType("bytes", await interact.getHand());
  const v13 = stdlib.bytes_eq(v12, "ROCK");
  const v14 = stdlib.bytes_eq(v12, "PAPER");
  const v15 = stdlib.bytes_eq(v12, "SCISSORS");
  const v16 = v13 ? true : v14;
  const v17 = v16 ? true : v15;
  stdlib.assert(v17);
  const v18 = v14 ? 1 : 2;
  const v19 = v13 ? 0 : v18;
  const v23 = stdlib.random_uint256();
  const v24 = stdlib.uint256_to_bytes(v23);
  const v25 = stdlib.uint256_to_bytes(v19);
  const v26 = stdlib.bytes_cat(v24, v25);
  const v27 = stdlib.keccak256(v26);
  const v28 = v27;
  const v29 = stdlib.isType("bool", await interact.commits());
  const [txn3] = await ctc.sendrecv("A", "m5", [v2, v3, v28], 0, "e5");
  const v30 = txn3.value;
  const v31 = stdlib.eq(v30, 0);
  stdlib.assert(v31);
  const [v43, txn4] = await ctc.recv("A", "e7");
  const v45 = txn4.value;
  const v46 = stdlib.eq(v45, 0);
  stdlib.assert(v46);
  const v47 = stdlib.le(0, v43);
  const v48 = stdlib.lt(v43, 3);
  const v49 = v47 ? v48 : false;
  stdlib.assert(v49);
  const v50 = v23;
  const v51 = v19;
  const v52 = stdlib.le(0, v43);
  const v53 = stdlib.lt(v43, 3);
  const v54 = v52 ? v53 : false;
  stdlib.assert(v54);
  const v55 = stdlib.eq(v43, 0);
  const v56 = stdlib.eq(v43, 1);
  const v57 = v56 ? "PAPER" : "SCISSORS";
  const v58 = v55 ? "ROCK" : v57;
  const v59 = stdlib.isType("bool", await interact.reveals(v58));
  const [txn5] = await ctc.sendrecv("A", "m9", [v2, v3, v28, v43, v50, v51], 0, "e9");
  const v60 = txn5.value;
  const v61 = stdlib.eq(v60, 0);
  stdlib.assert(v61);
  const v62 = stdlib.uint256_to_bytes(v50);
  const v63 = stdlib.uint256_to_bytes(v51);
  const v64 = stdlib.bytes_cat(v62, v63);
  const v65 = stdlib.keccak256(v64);
  const v66 = stdlib.eq(v28, v65);
  stdlib.assert(v66);
  const v67 = stdlib.le(0, v51);
  const v68 = stdlib.lt(v51, 3);
  const v69 = v67 ? v68 : false;
  stdlib.assert(v69);
  const v70 = stdlib.le(0, v51);
  const v71 = stdlib.lt(v51, 3);
  const v72 = v70 ? v71 : false;
  const v73 = stdlib.le(0, v43);
  const v74 = stdlib.lt(v43, 3);
  const v75 = v73 ? v74 : false;
  const v76 = v72 ? v75 : false;
  const v77 = stdlib.sub(4, v43);
  const v78 = stdlib.add(v51, v77);
  const v79 = stdlib.mod(v78, 3);
  const v80 = v75 ? 0 : 1;
  const v81 = v72 ? 2 : v80;
  const v82 = v76 ? v79 : v81;
  const v121 = stdlib.isType("bool", await interact.outcome());
  const v122 = stdlib.le(0, v82);
  const v123 = stdlib.lt(v82, 5);
  const v124 = v122 ? v123 : false;
  stdlib.assert(v124);
  const v125 = stdlib.eq(v82, 0);
  const v126 = stdlib.eq(v82, 1);
  const v127 = stdlib.eq(v82, 2);
  const v128 = stdlib.eq(v82, 3);
  const v129 = v128 ? "Alice quits" : "Bob quits";
  const v130 = v127 ? "Alice wins" : v129;
  const v131 = v126 ? "Draw" : v130;
  const v132 = v125 ? "Bob wins" : v131;
  return [v132]; }

export async function B(stdlib, ctc, interact) {
  const txn0 = { balance: 0, value: 0 };
  const [v2, v3, txn1] = await ctc.recv("B", "e1");
  const v6 = txn1.value;
  const v7 = stdlib.add(v2, v3);
  const v8 = stdlib.eq(v6, v7);
  stdlib.assert(v8);
  const v9 = stdlib.isType("bool", await interact.accepts(v2, v3));
  const [txn2] = await ctc.sendrecv("B", "m3", [v2, v3], v2, "e3");
  const v10 = txn2.value;
  const v11 = stdlib.eq(v10, v2);
  stdlib.assert(v11);
  const [v28, txn3] = await ctc.recv("B", "e5");
  const v30 = txn3.value;
  const v31 = stdlib.eq(v30, 0);
  stdlib.assert(v31);
  const v32 = stdlib.isType("bytes", await interact.getHand());
  const v33 = stdlib.bytes_eq(v32, "ROCK");
  const v34 = stdlib.bytes_eq(v32, "PAPER");
  const v35 = stdlib.bytes_eq(v32, "SCISSORS");
  const v36 = v33 ? true : v34;
  const v37 = v36 ? true : v35;
  stdlib.assert(v37);
  const v38 = v34 ? 1 : 2;
  const v39 = v33 ? 0 : v38;
  const v43 = v39;
  const v44 = stdlib.isType("bool", await interact.shows());
  const [txn4] = await ctc.sendrecv("B", "m7", [v2, v3, v28, v43], 0, "e7");
  const v45 = txn4.value;
  const v46 = stdlib.eq(v45, 0);
  stdlib.assert(v46);
  const v47 = stdlib.le(0, v43);
  const v48 = stdlib.lt(v43, 3);
  const v49 = v47 ? v48 : false;
  stdlib.assert(v49);
  const [v50, v51, txn5] = await ctc.recv("B", "e9");
  const v60 = txn5.value;
  const v61 = stdlib.eq(v60, 0);
  stdlib.assert(v61);
  const v62 = stdlib.uint256_to_bytes(v50);
  const v63 = stdlib.uint256_to_bytes(v51);
  const v64 = stdlib.bytes_cat(v62, v63);
  const v65 = stdlib.keccak256(v64);
  const v66 = stdlib.eq(v28, v65);
  stdlib.assert(v66);
  const v67 = stdlib.le(0, v51);
  const v68 = stdlib.lt(v51, 3);
  const v69 = v67 ? v68 : false;
  stdlib.assert(v69);
  const v70 = stdlib.le(0, v51);
  const v71 = stdlib.lt(v51, 3);
  const v72 = v70 ? v71 : false;
  const v73 = stdlib.le(0, v43);
  const v74 = stdlib.lt(v43, 3);
  const v75 = v73 ? v74 : false;
  const v76 = v72 ? v75 : false;
  const v77 = stdlib.sub(4, v43);
  const v78 = stdlib.add(v51, v77);
  const v79 = stdlib.mod(v78, 3);
  const v80 = v75 ? 0 : 1;
  const v81 = v72 ? 2 : v80;
  const v82 = v76 ? v79 : v81;
  const v121 = stdlib.isType("bool", await interact.outcome());
  const v122 = stdlib.le(0, v82);
  const v123 = stdlib.lt(v82, 5);
  const v124 = v122 ? v123 : false;
  stdlib.assert(v124);
  const v125 = stdlib.eq(v82, 0);
  const v126 = stdlib.eq(v82, 1);
  const v127 = stdlib.eq(v82, 2);
  const v128 = stdlib.eq(v82, 3);
  const v129 = v128 ? "Alice quits" : "Bob quits";
  const v130 = v127 ? "Alice wins" : v129;
  const v131 = v126 ? "Draw" : v130;
  const v132 = v125 ? "Bob wins" : v131;
  return [v132]; }

export const ABI = [{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"},{"internalType":"uint256","name":"v28","type":"uint256"},{"internalType":"uint256","name":"v43","type":"uint256"}],"name":"m10","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"},{"internalType":"uint256","name":"v28","type":"uint256"}],"name":"m8","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"},{"internalType":"uint256","name":"v28","type":"uint256"},{"internalType":"uint256","name":"v43","type":"uint256"},{"internalType":"uint256","name":"v50","type":"uint256"},{"internalType":"uint256","name":"v51","type":"uint256"}],"name":"m9","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"}],"name":"m1","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"},{"internalType":"uint256","name":"v28","type":"uint256"}],"name":"m5","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"}],"name":"m3","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"}],"name":"m6","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"}],"name":"m4","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"},{"internalType":"uint256","name":"v2","type":"uint256"},{"internalType":"uint256","name":"v3","type":"uint256"},{"internalType":"uint256","name":"v28","type":"uint256"},{"internalType":"uint256","name":"v43","type":"uint256"}],"name":"m7","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"}],"name":"m2","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address payable","name":"pA","type":"address"},{"internalType":"address payable","name":"pB","type":"address"}],"payable":true,"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"v2","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"v3","type":"uint256"}],"name":"e1","type":"event"},{"anonymous":false,"inputs":[],"name":"e2","type":"event"},{"anonymous":false,"inputs":[],"name":"e3","type":"event"},{"anonymous":false,"inputs":[],"name":"e4","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"v28","type":"uint256"}],"name":"e5","type":"event"},{"anonymous":false,"inputs":[],"name":"e6","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"v43","type":"uint256"}],"name":"e7","type":"event"},{"anonymous":false,"inputs":[],"name":"e8","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"v50","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"v51","type":"uint256"}],"name":"e9","type":"event"},{"anonymous":false,"inputs":[],"name":"e10","type":"event"}];

export const Bytecode = "0x6080604052604051610fdd380380610fdd8339818101604052604081101561002657600080fd5b5080516020918201516040805160008186018190526001600160601b0319606095861b8116838501529390941b9092166054830152805160488184030181526068909201905280519201919091209055610f58806100856000396000f3fe6080604052600436106100915760003560e01c80639a429efa116100595780639a429efa146101f5578063d3dfce7c14610231578063e3fecd9b1461026d578063e8179733146102a9578063ed3e0722146102f157610091565b80631248dc881461009657806326e9215f146100e05780632b82ac4314610122578063371ff7ad146101775780635937f4dc146101b3575b600080fd5b6100de600480360360c08110156100ac57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a0013561031f565b005b6100de600480360360a08110156100f657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060800135610411565b6100de600480360361010081101561013957600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060c08101359060e001356104fc565b6100de6004803603608081101561018d57600080fd5b506001600160a01b0381358116916020810135909116906040810135906060013561079e565b6100de600480360360a08110156101c957600080fd5b506001600160a01b038135811691602081013590911690604081013590606081013590608001356108a7565b6100de6004803603608081101561020b57600080fd5b506001600160a01b038135811691602081013590911690604081013590606001356109bc565b6100de6004803603608081101561024757600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610ac0565b6100de6004803603608081101561028357600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135610ba4565b6100de600480360360c08110156102bf57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a00135610c88565b6100de6004803603604081101561030757600080fd5b506001600160a01b0381358116916020013516610db6565b6040805160076020808301919091526001600160601b031960608a811b82168486015289901b166054830152606882018790526088820186905260a8820185905260c88083018590528351808403909101815260e890920190925280519101206000541461038c57600080fd5b336001600160a01b038616146103a157600080fd5b6040516001600160a01b03861690303180156108fc02916000818181858888f193505050501580156103d7573d6000803e3d6000fd5b506040517f5ef1d939728ae307281ba62215efdccdf0b99fa9cc412f247b7ab97b4729b74f90600090a1600080556001600160a01b038616ff5b6040805160056020808301919091526001600160601b0319606089811b82168486015288901b166054830152606882018690526088820185905260a88083018590528351808403909101815260c890920190925280519101206000541461047757600080fd5b336001600160a01b0386161461048c57600080fd5b6040516001600160a01b03861690303180156108fc02916000818181858888f193505050501580156104c2573d6000803e3d6000fd5b506040517fffa3d43ab9b6e5b34273fd049718a85553427384eed63754abc672936df0584e90600090a1600080556001600160a01b038516ff5b6040805160076020808301919091526001600160601b031960608c811b8216848601528b901b166054830152606882018990526088820188905260a8820187905260c88083018790528351808403909101815260e890920190925280519101206000541461056957600080fd5b336001600160a01b0389161461057e57600080fd5b341561058957600080fd5b60408051602080820185905282518083039091018152818301835260608083018590528351808403909101815260809092019092526105c89190610e54565b6040516020018082805190602001908083835b602083106105fa5780518252601f1990920191602091820191016105db565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c841461064357600080fd5b6003811061065057600080fd5b6003808210908410600082610666576000610668565b815b61068d5782610685578161067d576001610680565b60005b610688565b60025b61069e565b60038660040385018161069c57fe5b065b905060028114811581816001600160a01b038f166108fc836106cd57826106c5578e6106c8565b60005b6106d2565b8e6002025b8e019081150290604051600060405180830381858888f193505050501580156106ff573d6000803e3d6000fd5b508d6001600160a01b03166108fc83610727578261071d578e610722565b8e6002025b61072a565b60005b6040518115909202916000818181858888f19350505050158015610752573d6000803e3d6000fd5b50604080518a8152602081018a905281517f6d32a2ce93084268e9ee8e741d4257b2c396b94a1ffc25aeb6fc4ba8fc0594d2929181900390910190a1600080556001600160a01b038f16ff5b60408051600060208083018290526001600160601b0319606089811b82168587015288901b166054840152835160488185030181526068909301909352815191909201209054146107ee57600080fd5b336001600160a01b0385161461080357600080fd5b808201341461081157600080fd5b604080518381526020810183905281517fc9d006980a027d32b08195d9eab835f93f490ac52038c85ed3e8aca6e0b9b2e1929181900390910190a16040805160016020808301919091526001600160601b0319606097881b8116838501529590961b909416605485015260688401929092526088808401919091528151808403909101815260a890920190528051910120600055565b6040805160036020808301919091526001600160601b0319606089811b82168486015288901b1660548301526068820186905260888083018690528351808403909101815260a890920190925280519101206000541461090657600080fd5b336001600160a01b0386161461091b57600080fd5b341561092657600080fd5b6040805182815290517f26bdc6b0a0806ec5cb3992c1b74dd2db228f99da5f09181980c9114c97ebf4079181900360200190a16040805160056020808301919091526001600160601b0319606098891b8116838501529690971b90951660548601526068850193909352608884019190915260a8808401919091528151808403909101815260c890920190528051910120600055565b6040805160016020808301919091526001600160601b0319606088811b82168486015287901b1660548301526068820185905260888083018590528351808403909101815260a8909201909252805191012060005414610a1b57600080fd5b336001600160a01b03841614610a3057600080fd5b813414610a3c57600080fd5b6040517f56800b5260512456b844fc9371dbdb10a629694349bc1829c0518bc84861b0c190600090a16040805160036020808301919091526001600160601b0319606097881b8116838501529590961b909416605485015260688401929092526088808401919091528151808403909101815260a890920190528051910120600055565b6040805160036020808301919091526001600160601b0319606088811b82168486015287901b1660548301526068820185905260888083018590528351808403909101815260a8909201909252805191012060005414610b1f57600080fd5b336001600160a01b03841614610b3457600080fd5b6040516001600160a01b03841690303180156108fc02916000818181858888f19350505050158015610b6a573d6000803e3d6000fd5b506040517fd6694479677b4939b334fce2b8096952c15688edcb9eb18da0a00fbde0d22fb690600090a1600080556001600160a01b038416ff5b6040805160016020808301919091526001600160601b0319606088811b82168486015287901b1660548301526068820185905260888083018590528351808403909101815260a8909201909252805191012060005414610c0357600080fd5b336001600160a01b03851614610c1857600080fd5b6040516001600160a01b03851690303180156108fc02916000818181858888f19350505050158015610c4e573d6000803e3d6000fd5b506040517f79e5f05486520ee227978e44df5013b958eb8b7c4045fd17db1c8f340f2c361190600090a1600080556001600160a01b038416ff5b6040805160056020808301919091526001600160601b031960608a811b82168486015289901b166054830152606882018790526088820186905260a88083018690528351808403909101815260c8909201909252805191012060005414610cee57600080fd5b336001600160a01b03861614610d0357600080fd5b3415610d0e57600080fd5b60038110610d1b57600080fd5b6040805182815290517ffc55d683ac816a7149ebdfa999ae1bcfeeae27c37c9dab64a23f617beed2a0079181900360200190a16040805160076020808301919091526001600160601b03196060998a1b8116838501529790981b90961660548701526068860194909452608885019290925260a884015260c8808401919091528151808403909101815260e890920190528051910120600055565b60408051600060208083018290526001600160601b0319606087811b82168587015286901b16605484015283516048818503018152606890930190935281519190920120905414610e0657600080fd5b336001600160a01b03821614610e1b57600080fd5b6040517f9b31f9e88fd11f71bfbf93b0237bc9a0900b8479a307f60435e40543e383403590600090a1600080556001600160a01b038216ff5b606082518383604051602001808461ffff1661ffff1660f01b815260020183805190602001908083835b60208310610e9d5780518252601f199092019160209182019101610e7e565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610ee55780518252601f199092019160209182019101610ec6565b6001836020036101000a038019825116818451168082178552505050505050905001935050505060405160208183030381529060405290509291505056fea265627a7a72315820aae297ecef68369b424193d6f91ecf2a8cb71570dbc9a17769cb6bdd88d603d764736f6c634300050b0032";