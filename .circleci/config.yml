# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  "abstract-simul":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean abstract-simul"
        name: "clean abstract-simul"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build abstract-simul"
        name: "rebuild abstract-simul"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run abstract-simul"
        name: "run abstract-simul"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "algorand-placeholder":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean algorand-placeholder"
        name: "clean algorand-placeholder"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build algorand-placeholder"
        name: "rebuild algorand-placeholder"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run algorand-placeholder"
        name: "run algorand-placeholder"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  argz:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean argz"
        name: clean argz
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build argz"
        name: rebuild argz
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run argz"
        name: run argz
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "atomic-swap":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean atomic-swap"
        name: "clean atomic-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build atomic-swap"
        name: "rebuild atomic-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run atomic-swap"
        name: "run atomic-swap"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "build-core":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    steps:
    - checkout
    - run:
        command: "mkdir -p ~/.local/bin"
        name: "mkdir -p ~/.local/bin"
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /home/circleci/.local/bin \
            && mv mo /home/circleci/.local/bin
        name: install mo
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSLo ~/.local/bin/solc \
            https://github.com/ethereum/solidity/releases/download/v0.8.2/solc-static-linux
        name: "Install `solc`"
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSLo /tmp/z3.zip \
               https://github.com/Z3Prover/z3/releases/download/z3-4.8.10/z3-4.8.10-x64-ubuntu-18.04.zip \
            && unzip -p /tmp/z3.zip z3-4.8.10-x64-ubuntu-18.04/bin/z3 \
             | cat > ~/.local/bin/z3
        name: "Install `z3`"
        no_output_timeout: 10m
    - run:
        command: |
          sudo apt update && sudo apt install \
              g++ \
              gcc \
              git \
              gnupg \
              libc6-dev \
              libffi-dev \
              libgmp-dev \
              libtinfo-dev \
              make \
              netbase \
              xz-utils \
              zlib1g-dev \
            && curl -sSL https://get.haskellstack.org/ | sh -s - -d ~/.local/bin
        name: "Install `stack`"
        no_output_timeout: 10m
    - run:
        command: "chmod +x ~/.local/bin/*"
        name: "chmod +x ~/.local/bin/*"
        no_output_timeout: 10m
    - run:
        command: "cd hs && make package.yaml"
        name: Generate package.yaml
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-3-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
    - run:
        command: "cd hs && make hs-deps"
        name: Install hs dependencies
        no_output_timeout: 10m
    - save_cache:
        key: "hs-3-{{ checksum \"hs/stack.yaml\" }}-{{ checksum \"hs/package.yaml\" }}"
        paths:
        - ~/.stack
        - "hs/.stack-work"
    - run:
        command: "cd hs && make hs-clean"
        name: Clean hs
        no_output_timeout: 10m
    - run:
        command: "cd hs && make hs-build"
        name: Build hs
        no_output_timeout: 10m
    - run:
        command: "cd hs && stack install"
        name: "Install `reachc`"
        no_output_timeout: 10m
    - save_cache:
        key: "hs-{{ .Revision }}"
        paths:
        - /root/.stack
        - "hs/.stack-work"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: "cd scripts/ethereum-devnet && make build"
        name: "Build ethereum-devnet"
        no_output_timeout: 10m
    - run:
        command: "cd js && make build"
        name: Build js
        no_output_timeout: 10m
    - run:
        command: "cd js/stdlib && make check"
        name: Check js/stdlib/package.json
        no_output_timeout: 10m
    - run:
        command: |
          mkdir -p /tmp/build-core/bin
          cp ~/.local/bin/* /tmp/build-core/bin
          docker save reachsh/runner:latest | gzip > /tmp/build-core/runner.tar.gz
        name: "Stash `build-core` workspace artifacts"
        no_output_timeout: 10m
    - persist_to_workspace:
        paths:
        - runner.tar.gz
        - bin
        root: "/tmp/build-core"
    - run:
        command: |
          docker pull reachsh/algorand-devnet:0.1
          docker run --entrypoint /bin/sh reachsh/algorand-devnet:0.1 -c 'echo $REACH_GIT_HASH'
        name: "Pull algorand-devnet"
        no_output_timeout: 10m
    - jq/install
    - run:
        command: "scripts/docker-check.sh || echo 'XXX allowed to fail'"
        name: "Is dockerhub up to date?"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "chicken-fork":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean chicken-fork"
        name: "clean chicken-fork"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-fork"
        name: "rebuild chicken-fork"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run chicken-fork"
        name: "run chicken-fork"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "chicken-parallel":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean chicken-parallel"
        name: "clean chicken-parallel"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-parallel"
        name: "rebuild chicken-parallel"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run chicken-parallel"
        name: "run chicken-parallel"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "chicken-race":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean chicken-race"
        name: "clean chicken-race"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build chicken-race"
        name: "rebuild chicken-race"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run chicken-race"
        name: "run chicken-race"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "docker-lint":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "hadolint/hadolint:v1.18.0-6-ga0d655d-alpine"
    steps:
    - checkout
    - run:
        command: apk add make bash curl jq
        name: "install make, bash, curl, and jq"
        no_output_timeout: 10m
    - run:
        command: "make docker-lint"
        name: run hadolint
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "docs-deploy":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "circleci/node:9.9.0"
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/docs_workspace
    - run:
        command: |
          # sudo npm install -g --silent gh-pages@3.0.0
          # git config user.email "ci-build@reach.sh"
          # git config user.name "ci-build"
          git config user.email "devbot@reach.sh"
          git config user.name "reachdevbot"
        name: Install and configure dependencies
        no_output_timeout: 10m
    - add_ssh_keys:
        fingerprints:
        - "83:23:9c:21:6a:74:61:48:20:da:a3:45:79:89:3e:86"
    - run:
        command: |
          git fetch origin gh-pages
          git checkout gh-pages
          git pull origin gh-pages
          git rm -r .
          cp -r /tmp/docs_workspace/docs/* .
          git add .
          # https://stackoverflow.com/questions/8123674/how-to-git-commit-nothing-without-an-error
          git diff-index --quiet HEAD || git commit -m "[ci skip] docs for $CIRCLE_SHA1"
          git push origin gh-pages
        name: "Deploy docs to gh-pages branch"
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "docs-render":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    steps:
    - checkout
    - run:
        command: |
          sudo add-apt-repository -y ppa:plt/racket \
            && sudo apt update \
            && sudo apt install -y --no-install-recommends \
              libcairo2 \
              libfontconfig1 \
              libjpeg62 \
              libpangocairo-1.0 \
              racket \
              python3-setuptools
        name: Install dependencies
        no_output_timeout: 10m
    - run:
        command: "cd pygments && sudo make install"
        name: "Install `pygments-reach`"
        no_output_timeout: 10m
    - run:
        command: "cd docs-src && make render"
        name: Render docs
        no_output_timeout: 10m
    - store_artifacts:
        path: docs/
    - run:
        command: |
          mkdir -p /tmp/docs_workspace
          cp -r docs /tmp/docs_workspace/
        name: Copy docs to workspace
        no_output_timeout: 10m
    - persist_to_workspace:
        paths:
        - docs
        root: /tmp/docs_workspace
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  exports:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean exports"
        name: clean exports
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build exports"
        name: rebuild exports
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run exports"
        name: run exports
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "maybe-send":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean maybe-send"
        name: "clean maybe-send"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build maybe-send"
        name: "rebuild maybe-send"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run maybe-send"
        name: "run maybe-send"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "multiple-pr-case":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean multiple-pr-case"
        name: "clean multiple-pr-case"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build multiple-pr-case"
        name: "rebuild multiple-pr-case"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run multiple-pr-case"
        name: "run multiple-pr-case"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  multisig:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean multisig"
        name: clean multisig
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build multisig"
        name: rebuild multisig
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run multisig"
        name: run multisig
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "nft-dumb":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean nft-dumb"
        name: "clean nft-dumb"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nft-dumb"
        name: "rebuild nft-dumb"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run nft-dumb"
        name: "run nft-dumb"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  nim:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean nim"
        name: clean nim
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build nim"
        name: rebuild nim
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run nim"
        name: run nim
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "object-digest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean object-digest"
        name: "clean object-digest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build object-digest"
        name: "rebuild object-digest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run object-digest"
        name: "run object-digest"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  overview:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean overview"
        name: clean overview
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview"
        name: rebuild overview
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run overview"
        name: run overview
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "overview-more-deps":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean overview-more-deps"
        name: "clean overview-more-deps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview-more-deps"
        name: "rebuild overview-more-deps"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run overview-more-deps"
        name: "run overview-more-deps"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "overview-react":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean overview-react"
        name: "clean overview-react"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build overview-react"
        name: "rebuild overview-react"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run overview-react"
        name: "run overview-react"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "own-addr":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean own-addr"
        name: "clean own-addr"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build own-addr"
        name: "rebuild own-addr"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run own-addr"
        name: "run own-addr"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "popularity-contest":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean popularity-contest"
        name: "clean popularity-contest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build popularity-contest"
        name: "rebuild popularity-contest"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run popularity-contest"
        name: "run popularity-contest"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  race:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean race"
        name: clean race
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build race"
        name: rebuild race
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run race"
        name: run race
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  raffle:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean raffle"
        name: clean raffle
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build raffle"
        name: rebuild raffle
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run raffle"
        name: run raffle
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  remote:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean remote"
        name: clean remote
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build remote"
        name: rebuild remote
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run remote"
        name: run remote
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "rent-seeking":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean rent-seeking"
        name: "clean rent-seeking"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build rent-seeking"
        name: "rebuild rent-seeking"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run rent-seeking"
        name: "run rent-seeking"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  rental:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean rental"
        name: clean rental
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build rental"
        name: rebuild rental
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run rental"
        name: run rental
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "secured-loan":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean secured-loan"
        name: "clean secured-loan"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build secured-loan"
        name: "rebuild secured-loan"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run secured-loan"
        name: "run secured-loan"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  shellcheck:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "cimg/base:stable-18.04"
    steps:
    - checkout
    - shellcheck/install
    - run:
        command: "make sh-lint"
        name: Run shellcheck
        no_output_timeout: 10m
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "test-hs":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd hs && make hs-test-xml"
        name: "test hs (xml)"
        no_output_timeout: 20m
    - store_test_results:
        path: "hs/test-reports"
    - run:
        command: "cd hs && make hs-check"
        name: check hs
        no_output_timeout: 10m
    - store_artifacts:
        path: hs/stan.html
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "test-js":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd js/stdlib && make clean-test && sbin/test.sh"
        name: test js
        no_output_timeout: 10m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  timeoutception:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean timeoutception"
        name: clean timeoutception
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build timeoutception"
        name: rebuild timeoutception
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run timeoutception"
        name: run timeoutception
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  ttt:
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean ttt"
        name: clean ttt
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build ttt"
        name: rebuild ttt
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run ttt"
        name: run ttt
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-2":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-2"
        name: "clean tut-2"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-2"
        name: "rebuild tut-2"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-2"
        name: "run tut-2"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-3":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-3"
        name: "clean tut-3"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-3"
        name: "rebuild tut-3"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-3"
        name: "run tut-3"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-4":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-4"
        name: "clean tut-4"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-4"
        name: "rebuild tut-4"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-4"
        name: "run tut-4"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-5":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-5"
        name: "clean tut-5"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-5"
        name: "rebuild tut-5"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-5"
        name: "run tut-5"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-5-attack":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-5-attack"
        name: "clean tut-5-attack"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-5-attack"
        name: "rebuild tut-5-attack"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-5-attack"
        name: "run tut-5-attack"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-6":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-6"
        name: "clean tut-6"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-6"
        name: "rebuild tut-6"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-6"
        name: "run tut-6"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-7":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-7"
        name: "clean tut-7"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7"
        name: "rebuild tut-7"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-7"
        name: "run tut-7"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-7-array":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-7-array"
        name: "clean tut-7-array"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7-array"
        name: "rebuild tut-7-array"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-7-array"
        name: "run tut-7-array"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-7-rpc":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-7-rpc"
        name: "clean tut-7-rpc"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-7-rpc"
        name: "rebuild tut-7-rpc"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-7-rpc"
        name: "run tut-7-rpc"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-8":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-8"
        name: "clean tut-8"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-8"
        name: "rebuild tut-8"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-8"
        name: "run tut-8"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "tut-9":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean tut-9"
        name: "clean tut-9"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build tut-9"
        name: "rebuild tut-9"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run tut-9"
        name: "run tut-9"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "variable-transfers":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean variable-transfers"
        name: "clean variable-transfers"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build variable-transfers"
        name: "rebuild variable-transfers"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run variable-transfers"
        name: "run variable-transfers"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "weird-swap":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean weird-swap"
        name: "clean weird-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build weird-swap"
        name: "rebuild weird-swap"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run weird-swap"
        name: "run weird-swap"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-fomo":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean workshop-fomo"
        name: "clean workshop-fomo"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-fomo"
        name: "rebuild workshop-fomo"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run workshop-fomo"
        name: "run workshop-fomo"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-fomo-generalized":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean workshop-fomo-generalized"
        name: "clean workshop-fomo-generalized"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-fomo-generalized"
        name: "rebuild workshop-fomo-generalized"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run workshop-fomo-generalized"
        name: "run workshop-fomo-generalized"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-hash-lock":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean workshop-hash-lock"
        name: "clean workshop-hash-lock"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-hash-lock"
        name: "rebuild workshop-hash-lock"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run workshop-hash-lock"
        name: "run workshop-hash-lock"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-relay":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean workshop-relay"
        name: "clean workshop-relay"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-relay"
        name: "rebuild workshop-relay"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run workshop-relay"
        name: "run workshop-relay"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
  "workshop-trust-fund":
    docker:
    - auth:
        password: $DOCKER_PASSWORD
        username: $DOCKER_LOGIN
      image: "reachsh/reach-circle:0.1.2"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/build-core"
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        command: |
          zcat /tmp/build-core/runner.tar.gz | docker load
          docker tag reachsh/runner:latest reachsh/runner:0.1.2
          docker tag reachsh/runner:latest reachsh/runner:0.1
          docker tag reachsh/runner:latest reachsh/runner:0
        name: attach runner image
        no_output_timeout: 10m
    - run:
        command: |
          curl -sSL https://git.io/get-mo -o mo \
            && chmod +x mo \
            && mkdir -p /usr/local/bin \
            && mv mo /usr/local/bin
        name: install mo
        no_output_timeout: 10m
    - restore_cache:
        keys:
        - "hs-{{ .Revision }}"
    - run:
        command: "cd examples && ./one.sh clean workshop-trust-fund"
        name: "clean workshop-trust-fund"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh build workshop-trust-fund"
        name: "rebuild workshop-trust-fund"
        no_output_timeout: 10m
    - run:
        command: "cd examples && ./one.sh run workshop-trust-fund"
        name: "run workshop-trust-fund"
        no_output_timeout: 5m
    - jq/install
    - slack/notify:
        branch_pattern: "master,gh-pages"
        event: fail
        template: basic_fail_1
orbs:
  jq: "circleci/jq@2.2.0"
  shellcheck: "circleci/shellcheck@2.2.0"
  slack: "circleci/slack@4.3.3"
version: 2.1
workflows:
  "build-and-test":
    jobs:
    - "build-core":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
    - "test-hs":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "test-js":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "abstract-simul":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "algorand-placeholder":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - argz:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "atomic-swap":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "chicken-fork":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "chicken-parallel":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "chicken-race":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - exports:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "maybe-send":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "multiple-pr-case":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - multisig:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "nft-dumb":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - nim:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "object-digest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - overview:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "overview-more-deps":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "overview-react":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "own-addr":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "popularity-contest":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - race:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - raffle:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - remote:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "rent-seeking":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - rental:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "secured-loan":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - timeoutception:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - ttt:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-2":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-3":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-4":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-5":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-5-attack":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-6":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-7":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-7-array":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-7-rpc":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-8":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "tut-9":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "variable-transfers":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "weird-swap":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-fomo":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-fomo-generalized":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-hash-lock":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-relay":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
    - "workshop-trust-fund":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        requires:
        - "build-core"
  docs:
    jobs:
    - "docs-render":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
    - "docs-deploy":
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"
        filters:
          branches:
            only: master
        requires:
        - "docs-render"
  lint:
    jobs:
    - shellcheck:
        context:
        - "reachdevbot-on-dockerhub"
        - "circleci-on-slack"

